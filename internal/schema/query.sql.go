// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package schema

import (
	"context"
)

const disableSlackChannel = `-- name: DisableSlackChannel :one
UPDATE slack_channels
SET enabled = FALSE
WHERE channel_id = $1
RETURNING channel_id, team_name, enabled, created_at
`

func (q *Queries) DisableSlackChannel(ctx context.Context, channelID string) (SlackChannel, error) {
	row := q.db.QueryRow(ctx, disableSlackChannel, channelID)
	var i SlackChannel
	err := row.Scan(
		&i.ChannelID,
		&i.TeamName,
		&i.Enabled,
		&i.CreatedAt,
	)
	return i, err
}

const getSlackChannelByID = `-- name: GetSlackChannelByID :one
SELECT channel_id, team_name, enabled, created_at FROM slack_channels
WHERE channel_id = $1
`

func (q *Queries) GetSlackChannelByID(ctx context.Context, channelID string) (SlackChannel, error) {
	row := q.db.QueryRow(ctx, getSlackChannelByID, channelID)
	var i SlackChannel
	err := row.Scan(
		&i.ChannelID,
		&i.TeamName,
		&i.Enabled,
		&i.CreatedAt,
	)
	return i, err
}

const insertSlackChannel = `-- name: InsertSlackChannel :one
INSERT INTO slack_channels (
    channel_id,
    team_name,
    enabled
) VALUES (
    $1,
    $2,
    $3
)
RETURNING channel_id, team_name, enabled, created_at
`

type InsertSlackChannelParams struct {
	ChannelID string
	TeamName  string
	Enabled   bool
}

func (q *Queries) InsertSlackChannel(ctx context.Context, arg InsertSlackChannelParams) (SlackChannel, error) {
	row := q.db.QueryRow(ctx, insertSlackChannel, arg.ChannelID, arg.TeamName, arg.Enabled)
	var i SlackChannel
	err := row.Scan(
		&i.ChannelID,
		&i.TeamName,
		&i.Enabled,
		&i.CreatedAt,
	)
	return i, err
}

const updateSlackChannel = `-- name: UpdateSlackChannel :one
UPDATE slack_channels
SET team_name = $2,
    enabled = TRUE
WHERE channel_id = $1
RETURNING channel_id, team_name, enabled, created_at
`

type UpdateSlackChannelParams struct {
	ChannelID string
	TeamName  string
}

func (q *Queries) UpdateSlackChannel(ctx context.Context, arg UpdateSlackChannelParams) (SlackChannel, error) {
	row := q.db.QueryRow(ctx, updateSlackChannel, arg.ChannelID, arg.TeamName)
	var i SlackChannel
	err := row.Scan(
		&i.ChannelID,
		&i.TeamName,
		&i.Enabled,
		&i.CreatedAt,
	)
	return i, err
}
