name: Release

on:
  schedule:
    - cron: '0 2 * * *' 
  workflow_dispatch:

jobs:
  build:
    uses: ./.github/workflows/build.yml

  bump_version:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    permissions:
      contents: write
    outputs:
      VERSION: ${{ steps.generate_version.outputs.VERSION }}
      COMMIT_HASH: ${{ steps.commit-and-push.outputs.commit_hash }}
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate version
      id: generate_version
      run: |
        DATE=$(date +'%Y.%m.%d')
        COUNT=$(git tag | grep -c "^v$DATE" || true)
        VERSION="v$DATE.$COUNT"
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Commit version update
      id: commit-and-push
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "Bump version to ${{ steps.generate_version.outputs.VERSION }}"
        git tag ${{ steps.generate_version.outputs.VERSION }}
        git push && git push --tags
        echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

  push:
    runs-on: ubuntu-latest
    needs: bump_version
    if: success()
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ needs.bump_version.outputs.COMMIT_HASH }}
        fetch-depth: 0

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ needs.bump_version.outputs.VERSION }}

  purge_old_versions:
    runs-on: ubuntu-latest
    needs: push
    if: success()
    permissions:
      packages: write
 
    steps:
      - uses: actions/delete-package-versions@v5
        with:
          package-name: ratchet
          package-type: container
          num-old-versions-to-delete: 1
          min-versions-to-keep: 14
